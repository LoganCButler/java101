package java101;

/**
 *     Each new term in the Fibonacci sequence is generated by adding the previous two terms.
 *     By starting with 1 and 2, the first 10 terms will be: 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
 *
 *     By considering the terms in the Fibonacci sequence whose values do not exceed four million,
 *     find the sum of the even-valued terms.
 */
public class EvenFibonacciNumbers {
    public long getSumOfEvenFibonacciSequenceTerms(long maxNumber) {
        long sum = 0;
        long numberN = 1;
        long numberNPlusOne = 1;
        long nextNumber;

        do {
            sum = updateSum(sum, numberNPlusOne);

            // shift to next index of the sequence
            nextNumber = numberN + numberNPlusOne;
            numberN = numberNPlusOne;
            numberNPlusOne = nextNumber;

        } while (nextNumber <= maxNumber);

        return sum;
    }

    private long updateSum(long currentSum, long numberNPlusOne) {
        long updatedSum = currentSum;

        if (numberNPlusOne % 2 == 0)
            updatedSum += numberNPlusOne;

        return updatedSum;
    }
}
